<?php
/* 
การตั้งชื่อตัวแปรและฟังก์ชันควรเขียนในรูปแบบ Snake Case เสมอ โดยตัวอักษรทั้งหมดควรเขียนด้วยตัวพิมพ์เล็ก และคำหลายคำควรคั่นด้วยเครื่องหมายขีดล่าง (_) สำหรับฟังก์ชันและตัวแปรในพื้นที่ชื่อส่วนกลาง (Global Namespace) ควรมีคำนำหน้าที่ไม่ซ้ำกันสำหรับปลั๊กอินของคุณ เช่น pdev_ ซึ่งถือเป็นแนวทางที่ถูกต้องในการเขียนฟังก์ชัน

แม้ว่าการใช้ตัวแปรส่วนกลาง (Global Variables) จะถือเป็นแนวปฏิบัติที่ไม่ดี แต่หากคุณต้องการใช้ ให้ตรวจสอบให้แน่ใจว่าได้เพิ่มคำนำหน้าแล้ว
*/
// Global variable with a unique prefix
$pdev_global_var = 'Hello';

/**
 * Example function using Snake Case naming convention
 *
 * @param string $param_a The parameter for the function.
 * @return void
 */
function pdev_example_function( $param_a ) {
    global $pdev_global_var;
    
    // Using the global variable
    echo $pdev_global_var . ' ' . $param_a;
}

// Calling the function
pdev_example_function( 'World!' );

/* 
ในตัวอย่างโค้ดด้านบน มีการใช้แนวทางการตั้งชื่อตัวแปรและฟังก์ชันดังนี้:

1. ตัวแปรส่วนกลาง `$pdev_global_var` ใช้คำนำหน้า `pdev_` เพื่อหลีกเลี่ยงการซ้ำซ้อนกับตัวแปรอื่นๆ ในพื้นที่ชื่อส่วนกลาง
2. ฟังก์ชัน `pdev_example_function()` ใช้รูปแบบ Snake Case ในการตั้งชื่อ โดยคำหลายคำถูกคั่นด้วยเครื่องหมายขีดล่าง และมีคำนำหน้า `pdev_`
3. พารามิเตอร์ `$param_a` ไม่ได้อยู่ในพื้นที่ชื่อส่วนกลาง จึงไม่จำเป็นต้องมีคำนำหน้า แต่ยังคงใช้รูปแบบ Snake Case ในการตั้งชื่อ
4. ภายในฟังก์ชัน มีการใช้คีย์เวิร์ด `global` เพื่อเข้าถึงตัวแปรส่วนกลาง `$pdev_global_var`

การปฏิบัติตามแนวทางการตั้งชื่อเหล่านี้จะช่วยให้โค้ดของคุณอ่านง่าย สอดคล้องกัน และหลีกเลี่ยงความขัดแย้งกับโค้ดอื่นๆ ในพื้นที่ชื่อส่วนกลาง ซึ่งเป็นสิ่งสำคัญโดยเฉพาะอย่างยิ่งเมื่อพัฒนาปลั๊กอินสำหรับ WordPress ที่อาจมีปฏิสัมพันธ์กับโค้ดจากส่วนอื่นๆ ของ WordPress หรือปลั๊กอินอื่นๆ

*/